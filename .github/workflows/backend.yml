name: Backend CI/CD

on:
  push:
    branches: [ "master" ]  # Trigger only on master

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout Code
        uses: actions/checkout@v3

      - name: ⚙️ Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 💾 Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 📦 Install Dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: 🧹 Run Linters (black, isort, ruff, flake8)
        run: |
          source .venv/bin/activate
          black --check app
          isort --check-only app
          ruff check app
          flake8 app

      - name: 🎨 Check Black Formatting
        run: |
          source .venv/bin/activate
          echo "🔍 Checking Black formatting..."
          black --check app || (echo "❌ Black found formatting issues. Please run 'black app' locally and commit the changes." && exit 1)
          

      - name: ✅ Run Tests (pytest with coverage)
        run: |
          source .venv/bin/activate
          PYTHONPATH=. pytest tests/ --cov=app --cov-report=xml

      - name: 📤 Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: backend
          name: backend-coverage

      - name: 🚀 Trigger Render Deployment
        if: success()
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
